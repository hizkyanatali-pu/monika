#!/usr/bin/env php
<?php

define('SPARKED', true);

ini_set('memory_limit', '1024M');

if (PHP_SAPI !== 'cli') {
    exit("This script can only be run from the command line.\n");
}

// Path constants
define('APPPATH', realpath(__DIR__ . '/app') . DIRECTORY_SEPARATOR);
define('ROOTPATH', realpath(__DIR__) . DIRECTORY_SEPARATOR);
define('SYSTEMPATH', realpath(__DIR__ . '/vendor/codeigniter4/framework/system') . DIRECTORY_SEPARATOR);
define('WRITEPATH', realpath(__DIR__ . '/writable') . DIRECTORY_SEPARATOR);
define('FCPATH', realpath(__DIR__ . '/public') . DIRECTORY_SEPARATOR);
define('CI_DEBUG', 1);

// Composer autoload
require_once ROOTPATH . 'vendor/autoload.php';

// Manual include config so class_exists() works
require_once APPPATH . 'Config/Autoload.php';
require_once APPPATH . 'Config/Modules.php';

// Load CI core
require_once SYSTEMPATH . 'Config/AutoloadConfig.php';
require_once SYSTEMPATH . 'Autoloader/Autoloader.php';

// Register CI Autoloader
$loader = new CodeIgniter\Autoloader\Autoloader();
$loader->initialize(new \Config\Autoload(), new \Config\Modules());
$loader->register();

// âœ… Now Config\Services will work
require_once SYSTEMPATH . 'Config/Services.php';
require_once SYSTEMPATH . 'CodeIgniter.php';

$app = \Config\Services::codeigniter();
$app->initialize();

$code = $app->run();
exit($code);